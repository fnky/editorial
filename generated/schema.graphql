### This file was generated by Nexus Schema
### Do not make changes to this file directly


input CreateDraftInput {
  body: String!
  slug: String
  tags: [CreateTagInput!]
  title: String!
}

input CreateTagInput {
  label: String!
  slug: String!
}

scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input EnumPostStatusFilter {
  equals: PostStatus
  in: [PostStatus!]
  not: NestedEnumPostStatusFilter
  notIn: [PostStatus!]
}

type Mutation {
  createDraft(input: CreateDraftInput!): Post
  createPost(data: PostCreateInput!): Post!
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedEnumPostStatusFilter {
  equals: PostStatus
  in: [PostStatus!]
  not: NestedEnumPostStatusFilter
  notIn: [PostStatus!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Post {
  body: String!
  createdAt: DateTime!
  id: String!
  publishedAt: DateTime
  slug: String!
  status: PostStatus!
  tags(after: TagWhereUniqueInput, before: TagWhereUniqueInput, first: Int, last: Int): [Tag!]!
  title: String!
  updatedAt: DateTime!
}

input PostCreateInput {
  body: String!
  createdAt: DateTime
  id: String
  publishedAt: DateTime
  slug: String!
  status: PostStatus!
  tags: TagCreateNestedManyWithoutPostInput
  title: String!
  updatedAt: DateTime
}

input PostOrderByInput {
  body: SortOrder
  createdAt: SortOrder
  id: SortOrder
  publishedAt: SortOrder
  slug: SortOrder
  status: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

enum PostStatus {
  DRAFT
  PUBLISHED
}

input PostWhereInput {
  AND: [PostWhereInput!]
  NOT: [PostWhereInput!]
  OR: [PostWhereInput!]
  body: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  publishedAt: DateTimeNullableFilter
  slug: StringFilter
  status: EnumPostStatusFilter
  tags: TagListRelationFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input PostWhereUniqueInput {
  id: String
  slug: String
}

type Query {
  post(where: PostWhereUniqueInput!): Post
  posts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int, orderBy: [PostOrderByInput!], where: PostWhereInput): [Post!]!
}

enum QueryMode {
  default
  insensitive
}

enum SortOrder {
  asc
  desc
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Tag {
  id: String!
  label: String!
  slug: String!
}

input TagCreateManyPostInput {
  id: String
  label: String!
  slug: String!
}

input TagCreateManyPostInputEnvelope {
  data: [TagCreateManyPostInput!]
  skipDuplicates: Boolean
}

input TagCreateNestedManyWithoutPostInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutPostInput!]
  create: [TagCreateWithoutPostInput!]
  createMany: TagCreateManyPostInputEnvelope
}

input TagCreateOrConnectWithoutPostInput {
  create: TagCreateWithoutPostInput!
  where: TagWhereUniqueInput!
}

input TagCreateWithoutPostInput {
  id: String
  label: String!
  slug: String!
}

input TagListRelationFilter {
  every: TagWhereInput
  none: TagWhereInput
  some: TagWhereInput
}

input TagWhereInput {
  AND: [TagWhereInput!]
  NOT: [TagWhereInput!]
  OR: [TagWhereInput!]
  Post: PostWhereInput
  id: StringFilter
  label: StringFilter
  postId: StringNullableFilter
  slug: StringFilter
}

input TagWhereUniqueInput {
  id: String
  slug: String
}
